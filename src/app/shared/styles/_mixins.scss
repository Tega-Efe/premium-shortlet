// ==========================================
// Reusable SCSS Mixins
// Shortlet Connect
// ==========================================

@import './variables';

// ===== Responsive Breakpoints =====
@mixin respond-to($breakpoint) {
  @if $breakpoint == 'xs' {
    @media (min-width: $breakpoint-xs) { @content; }
  } @else if $breakpoint == 'sm' {
    @media (min-width: $breakpoint-sm) { @content; }
  } @else if $breakpoint == 'md' {
    @media (min-width: $breakpoint-md) { @content; }
  } @else if $breakpoint == 'lg' {
    @media (min-width: $breakpoint-lg) { @content; }
  } @else if $breakpoint == 'xl' {
    @media (min-width: $breakpoint-xl) { @content; }
  } @else if $breakpoint == '2xl' {
    @media (min-width: $breakpoint-2xl) { @content; }
  }
}

// Mobile-first approach
@mixin mobile-only {
  @media (max-width: calc($breakpoint-md - 1px)) { @content; }
}

@mixin tablet-up {
  @media (min-width: $breakpoint-md) { @content; }
}

@mixin desktop-up {
  @media (min-width: $breakpoint-lg) { @content; }
}

// ===== Flexbox Utilities =====
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-between {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

@mixin flex-column {
  display: flex;
  flex-direction: column;
}

@mixin flex-column-center {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

// ===== Grid Utilities =====
@mixin grid($columns: 12, $gap: $grid-gutter) {
  display: grid;
  grid-template-columns: repeat($columns, 1fr);
  gap: $gap;
}

@mixin grid-auto-fit($min-width: 250px, $gap: $grid-gutter) {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax($min-width, 1fr));
  gap: $gap;
}

@mixin grid-auto-fill($min-width: 250px, $gap: $grid-gutter) {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax($min-width, 1fr));
  gap: $gap;
}

// ===== Typography =====
@mixin heading {
  font-family: $font-family-heading;
  font-weight: $font-weight-bold;
  line-height: $line-height-tight;
  color: $color-charcoal;
}

@mixin body-text {
  font-family: $font-family-primary;
  font-weight: $font-weight-normal;
  line-height: $line-height-normal;
  color: $color-warm-gray;
}

@mixin text-gradient($gradient: $gradient-primary) {
  background: $gradient;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
}

@mixin text-ellipsis($lines: 1) {
  @if $lines == 1 {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  } @else {
    display: -webkit-box;
    -webkit-line-clamp: $lines;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
}

// ===== Buttons =====
@mixin btn-base {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: $spacing-sm;
  padding: $btn-padding;
  height: $btn-height;
  font-family: $font-family-primary;
  font-size: $font-size-base;
  font-weight: $font-weight-semibold;
  text-decoration: none;
  border: none;
  border-radius: $btn-border-radius;
  cursor: pointer;
  transition: $transition-all;
  white-space: nowrap;
  user-select: none;

  &:disabled {
    opacity: 0.6;
    cursor: not-allowed;
    pointer-events: none;
  }

  &:focus-visible {
    outline: 2px solid $color-burgundy;
    outline-offset: 2px;
  }
}

@mixin btn-primary {
  @include btn-base;
  background: $gradient-primary;
  color: $color-cream;
  box-shadow: $shadow-md;

  &:hover:not(:disabled) {
    box-shadow: $shadow-lg;
    transform: translateY(-2px);
  }

  &:active:not(:disabled) {
    transform: translateY(0);
  }
}

@mixin btn-secondary {
  @include btn-base;
  background: $color-tan;
  color: $color-cream;
  box-shadow: $shadow-sm;

  &:hover:not(:disabled) {
    background: $color-tan-dark;
    box-shadow: $shadow-md;
  }
}

@mixin btn-outline {
  @include btn-base;
  background: transparent;
  color: $color-burgundy;
  border: 2px solid $color-burgundy;

  &:hover:not(:disabled) {
    background: $color-burgundy;
    color: $color-cream;
  }
}

@mixin btn-ghost {
  @include btn-base;
  background: transparent;
  color: $color-burgundy;

  &:hover:not(:disabled) {
    background: rgba($color-burgundy, 0.1);
  }
}

// ===== Cards =====
@mixin card {
  background: $card-bg;
  border-radius: $radius-xl;
  padding: $card-padding;
  box-shadow: $card-shadow;
  border: 1px solid $card-border;
  transition: $transition-all;
}

@mixin card-hover {
  &:hover {
    box-shadow: $card-shadow-hover;
    transform: translateY(-4px);
  }
}

@mixin card-gradient-overlay {
  position: relative;
  overflow: hidden;

  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: $gradient-overlay;
    opacity: 0;
    transition: opacity $transition-base;
    pointer-events: none;
  }

  &:hover::before {
    opacity: 1;
  }
}

// ===== Forms =====
@mixin input-base {
  width: 100%;
  height: $input-height;
  padding: $input-padding;
  font-family: $font-family-primary;
  font-size: $font-size-base;
  color: $color-charcoal;
  background: $input-bg;
  border: $input-border;
  border-radius: $radius-md;
  transition: $transition-colors, box-shadow $transition-base;

  &::placeholder {
    color: $color-warm-gray;
  }

  &:focus {
    outline: none;
    border: $input-border-focus;
    box-shadow: $input-shadow-focus;
  }

  &:disabled {
    background: $input-bg-disabled;
    cursor: not-allowed;
  }
}

// ===== Animations =====
@mixin fade-in($duration: $transition-base) {
  animation: fadeIn $duration ease-in-out;
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@mixin slide-up($duration: $transition-base) {
  animation: slideUp $duration ease-out;
}

@keyframes slideUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@mixin scale-in($duration: $transition-base) {
  animation: scaleIn $duration cubic-bezier(0.68, -0.55, 0.265, 1.55);
}

@keyframes scaleIn {
  from {
    opacity: 0;
    transform: scale(0.9);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

// ===== Utilities =====
@mixin container($max-width: $container-xl) {
  width: 100%;
  max-width: $max-width;
  margin: 0 auto;
  padding: 0 $spacing-lg;

  @include respond-to('lg') {
    padding: 0 $spacing-2xl;
  }
}

@mixin aspect-ratio($width: 16, $height: 9) {
  position: relative;
  overflow: hidden;

  &::before {
    content: '';
    display: block;
    padding-top: percentage(calc($height / $width));
  }

  > * {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
  }
}

@mixin overlay($opacity: 0.5, $color: $color-almost-black) {
  position: relative;

  &::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba($color, $opacity);
    pointer-events: none;
  }
}

@mixin backdrop-blur($blur: 10px) {
  backdrop-filter: blur($blur);
  -webkit-backdrop-filter: blur($blur);
}

@mixin scrollbar-style {
  &::-webkit-scrollbar {
    width: 8px;
    height: 8px;
  }

  &::-webkit-scrollbar-track {
    background: $color-beige;
    border-radius: $radius-full;
  }

  &::-webkit-scrollbar-thumb {
    background: $color-warm-gray;
    border-radius: $radius-full;

    &:hover {
      background: $color-charcoal;
    }
  }
}

@mixin truncate-lines($lines: 2) {
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

@mixin absolute-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@mixin full-cover {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

// ===== Loading States =====
@mixin skeleton-loading {
  background: linear-gradient(
    90deg,
    $color-beige 25%,
    $color-cream-dark 50%,
    $color-beige 75%
  );
  background-size: 200% 100%;
  animation: loading 1.5s ease-in-out infinite;
}

@keyframes loading {
  0% {
    background-position: 200% 0;
  }
  100% {
    background-position: -200% 0;
  }
}

@mixin pulse {
  animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
}

@keyframes pulse {
  0%, 100% {
    opacity: 1;
  }
  50% {
    opacity: 0.5;
  }
}

// ===== Hover Effects =====
@mixin hover-lift {
  transition: transform $transition-base, box-shadow $transition-base;

  &:hover {
    transform: translateY(-4px);
    box-shadow: $shadow-lg;
  }

  &:active {
    transform: translateY(-2px);
  }
}

@mixin hover-glow($color: $color-burgundy) {
  transition: box-shadow $transition-base;

  &:hover {
    box-shadow: 0 0 20px rgba($color, 0.4);
  }
}

// ===== Focus States =====
@mixin focus-ring($color: $color-burgundy) {
  &:focus-visible {
    outline: 2px solid $color;
    outline-offset: 2px;
    border-radius: $radius-sm;
  }
}
